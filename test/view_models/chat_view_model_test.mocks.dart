// Mocks generated by Mockito 5.3.2 from annotations
// in write_way_chat/test/view_models/chat_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:write_way_chat/data/datasource_contract.dart' as _i2;
import 'package:write_way_chat/models/chat_model.dart' as _i4;
import 'package:write_way_chat/models/local_message_model.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [IDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockIDatasource extends _i1.Mock implements _i2.IDatasource {
  MockIDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> addChat(_i4.Chat? chat) => (super.noSuchMethod(
        Invocation.method(
          #addChat,
          [chat],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> addMessage(_i5.LocalMessageModel? message) =>
      (super.noSuchMethod(
        Invocation.method(
          #addMessage,
          [message],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<dynamic> findChat(String? chatId) => (super.noSuchMethod(
        Invocation.method(
          #findChat,
          [chatId],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);
  @override
  _i3.Future<List<_i4.Chat>> findAllChats() => (super.noSuchMethod(
        Invocation.method(
          #findAllChats,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Chat>>.value(<_i4.Chat>[]),
      ) as _i3.Future<List<_i4.Chat>>);
  @override
  _i3.Future<void> updateMessage(_i5.LocalMessageModel? message) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMessage,
          [message],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<List<_i5.LocalMessageModel>> findMesasges(String? chatId) =>
      (super.noSuchMethod(
        Invocation.method(
          #findMesasges,
          [chatId],
        ),
        returnValue: _i3.Future<List<_i5.LocalMessageModel>>.value(
            <_i5.LocalMessageModel>[]),
      ) as _i3.Future<List<_i5.LocalMessageModel>>);
  @override
  _i3.Future<void> deleteChat(String? chatId) => (super.noSuchMethod(
        Invocation.method(
          #deleteChat,
          [chatId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
