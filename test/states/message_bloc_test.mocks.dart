// Mocks generated by Mockito 5.3.2 from annotations
// in write_way_chat/test/states/message_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:chat/src/models/message_model.dart' as _i4;
import 'package:chat/src/models/user_model.dart' as _i5;
import 'package:chat/src/services/message/message_service_contract.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [IMessageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIMessageService extends _i1.Mock implements _i2.IMessageService {
  MockIMessageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> sent(_i4.MessageModel? message) => (super.noSuchMethod(
        Invocation.method(
          #sent,
          [message],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Stream<_i4.MessageModel> messages(_i5.User? activeUser) =>
      (super.noSuchMethod(
        Invocation.method(
          #messages,
          [activeUser],
        ),
        returnValue: _i3.Stream<_i4.MessageModel>.empty(),
      ) as _i3.Stream<_i4.MessageModel>);
}
